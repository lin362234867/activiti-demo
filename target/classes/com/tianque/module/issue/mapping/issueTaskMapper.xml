<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--      
	This file is automatically generated by autoCode(https://git.oschina.net/durcframework/autoCode)
-->
<mapper namespace="com.tianque.module.issue.dao.IssueTaskDao">
	<resultMap id="queryResultMap" type="com.tianque.module.issue.domain.IssueTask">
		<result column="ID" property="id" jdbcType="INTEGER"/>
		<result column="ISSUE_ID" property="issueId" jdbcType="VARCHAR"/>
		<result column="TASK_ID" property="taskId" jdbcType="VARCHAR"/>
		<result column="ISSUE_NAME" property="issueName" jdbcType="VARCHAR"/>
		<result column="TASK_NAME" property="taskName" jdbcType="VARCHAR"/>
		<result column="CREATE_USER" property="createUser" jdbcType="VARCHAR"/>
		<result column="CREATE_DATE" property="createDate" jdbcType="TIMESTAMP"/>
		<result column="KEYWORDS" property="keywords" jdbcType="VARCHAR"/>
		<result column="PROCESS_INSTANCE_ID" property="processInstanceId" jdbcType="VARCHAR"/>
	</resultMap>
	<select id="findProjection" parameterType="org.durcframework.core.expression.projection.ProjectionQuery" resultType="java.util.HashMap">SELECT 
		<include refid="expressionBlock.projectionColumn"/> FROM ISSUE_TASK t 
		<include refid="expressionBlock.where"/>  
		<include refid="expressionBlock.groupBy"/>  
		<include refid="expressionBlock.having"/>  
		<if test="order != null">ORDER BY ${order}</if> 
	</select>
	<select id="find" parameterType="org.durcframework.core.expression.ExpressionQuery" resultMap="queryResultMap">SELECT 
		<choose>
			<when test="columns.size&gt;0"> 
				<foreach collection="columns" item="column" separator=",">${column}</foreach> 
			</when>
			<otherwise>t.ID , t.ISSUE_ID , t.TASK_ID , t.ISSUE_NAME , t.TASK_NAME , t.CREATE_USER , t.CREATE_DATE , t.KEYWORDS , t.PROCESS_INSTANCE_ID</otherwise>
		</choose> FROM ISSUE_TASK t
		<include refid="expressionBlock.where"/>  
		<choose>
			<when test="order == null">ORDER BY t.ID desc</when>
			<otherwise>ORDER BY ${order}</otherwise>
		</choose>  
		<if test="!isQueryAll">LIMIT #{start,jdbcType=INTEGER},#{limit,jdbcType=INTEGER}</if> 
	</select>
	<select id="findTotalCount" parameterType="org.durcframework.core.expression.ExpressionQuery" resultType="java.lang.Integer">SELECT count(*) FROM ISSUE_TASK t 
		<include refid="expressionBlock.where"/> 
	</select>
	<insert id="save" parameterType="com.tianque.module.issue.domain.IssueTask" keyProperty="id" keyColumn="ID" useGeneratedKeys="true">INSERT INTO ISSUE_TASK ( `ISSUE_ID` , `TASK_ID` , `ISSUE_NAME` , `TASK_NAME` , `CREATE_USER` , `CREATE_DATE` , `KEYWORDS` , `PROCESS_INSTANCE_ID` ) VALUES ( #{issueId,jdbcType=VARCHAR} , #{taskId,jdbcType=VARCHAR} , #{issueName,jdbcType=VARCHAR} , #{taskName,jdbcType=VARCHAR} , #{createUser,jdbcType=VARCHAR} , #{createDate,jdbcType=TIMESTAMP} , #{keywords,jdbcType=VARCHAR} , #{processInstanceId,jdbcType=VARCHAR} )</insert>
	<insert id="saveNotNull" parameterType="com.tianque.module.issue.domain.IssueTask" keyProperty="id" keyColumn="ID" useGeneratedKeys="true">INSERT INTO ISSUE_TASK 
		<trim prefix="(" suffix=")" suffixOverrides=","> 
			<if test="issueId != null">`ISSUE_ID`,</if>  
			<if test="taskId != null">`TASK_ID`,</if>  
			<if test="issueName != null">`ISSUE_NAME`,</if>  
			<if test="taskName != null">`TASK_NAME`,</if>  
			<if test="createUser != null">`CREATE_USER`,</if>  
			<if test="createDate != null">`CREATE_DATE`,</if>  
			<if test="keywords != null">`KEYWORDS`,</if>  
			<if test="processInstanceId != null">`PROCESS_INSTANCE_ID`,</if> 
		</trim>  
		<trim prefix="values (" suffix=")" suffixOverrides=","> 
			<if test="issueId != null">#{issueId,jdbcType=VARCHAR},</if>  
			<if test="taskId != null">#{taskId,jdbcType=VARCHAR},</if>  
			<if test="issueName != null">#{issueName,jdbcType=VARCHAR},</if>  
			<if test="taskName != null">#{taskName,jdbcType=VARCHAR},</if>  
			<if test="createUser != null">#{createUser,jdbcType=VARCHAR},</if>  
			<if test="createDate != null">#{createDate,jdbcType=TIMESTAMP},</if>  
			<if test="keywords != null">#{keywords,jdbcType=VARCHAR},</if>  
			<if test="processInstanceId != null">#{processInstanceId,jdbcType=VARCHAR},</if> 
		</trim> 
	</insert>
	<update id="update" parameterType="com.tianque.module.issue.domain.IssueTask">UPDATE ISSUE_TASK 
		<set>ISSUE_ID=#{issueId,jdbcType=VARCHAR}, TASK_ID=#{taskId,jdbcType=VARCHAR}, ISSUE_NAME=#{issueName,jdbcType=VARCHAR}, TASK_NAME=#{taskName,jdbcType=VARCHAR}, CREATE_USER=#{createUser,jdbcType=VARCHAR}, CREATE_DATE=#{createDate,jdbcType=TIMESTAMP}, KEYWORDS=#{keywords,jdbcType=VARCHAR}, PROCESS_INSTANCE_ID=#{processInstanceId,jdbcType=VARCHAR},</set> WHERE ID = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByExpression">UPDATE ISSUE_TASK 
		<set>ISSUE_ID=#{entity.issueId,jdbcType=VARCHAR}, TASK_ID=#{entity.taskId,jdbcType=VARCHAR}, ISSUE_NAME=#{entity.issueName,jdbcType=VARCHAR}, TASK_NAME=#{entity.taskName,jdbcType=VARCHAR}, CREATE_USER=#{entity.createUser,jdbcType=VARCHAR}, CREATE_DATE=#{entity.createDate,jdbcType=TIMESTAMP}, KEYWORDS=#{entity.keywords,jdbcType=VARCHAR}, PROCESS_INSTANCE_ID=#{entity.processInstanceId,jdbcType=VARCHAR},</set>  
		<include refid="expressionBlock.updateWhere"/> 
	</update>
	<update id="updateNotNull" parameterType="com.tianque.module.issue.domain.IssueTask">UPDATE ISSUE_TASK 
		<set> 
			<if test="issueId != null">ISSUE_ID=#{issueId,jdbcType=VARCHAR},</if>  
			<if test="taskId != null">TASK_ID=#{taskId,jdbcType=VARCHAR},</if>  
			<if test="issueName != null">ISSUE_NAME=#{issueName,jdbcType=VARCHAR},</if>  
			<if test="taskName != null">TASK_NAME=#{taskName,jdbcType=VARCHAR},</if>  
			<if test="createUser != null">CREATE_USER=#{createUser,jdbcType=VARCHAR},</if>  
			<if test="createDate != null">CREATE_DATE=#{createDate,jdbcType=TIMESTAMP},</if>  
			<if test="keywords != null">KEYWORDS=#{keywords,jdbcType=VARCHAR},</if>  
			<if test="processInstanceId != null">PROCESS_INSTANCE_ID=#{processInstanceId,jdbcType=VARCHAR},</if> 
		</set> WHERE ID = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateNotNullByExpression">UPDATE ISSUE_TASK 
		<set> 
			<if test="entity.issueId != null">ISSUE_ID=#{entity.issueId,jdbcType=VARCHAR},</if>  
			<if test="entity.taskId != null">TASK_ID=#{entity.taskId,jdbcType=VARCHAR},</if>  
			<if test="entity.issueName != null">ISSUE_NAME=#{entity.issueName,jdbcType=VARCHAR},</if>  
			<if test="entity.taskName != null">TASK_NAME=#{entity.taskName,jdbcType=VARCHAR},</if>  
			<if test="entity.createUser != null">CREATE_USER=#{entity.createUser,jdbcType=VARCHAR},</if>  
			<if test="entity.createDate != null">CREATE_DATE=#{entity.createDate,jdbcType=TIMESTAMP},</if>  
			<if test="entity.keywords != null">KEYWORDS=#{entity.keywords,jdbcType=VARCHAR},</if>  
			<if test="entity.processInstanceId != null">PROCESS_INSTANCE_ID=#{entity.processInstanceId,jdbcType=VARCHAR},</if> 
		</set>  
		<include refid="expressionBlock.updateWhere"/> 
	</update>
	<select id="get" resultMap="queryResultMap" parameterType="com.tianque.module.issue.domain.IssueTask">SELECT t.ID , t.ISSUE_ID , t.TASK_ID , t.ISSUE_NAME , t.TASK_NAME , t.CREATE_USER , t.CREATE_DATE , t.KEYWORDS , t.PROCESS_INSTANCE_ID FROM ISSUE_TASK t WHERE ID = #{id,jdbcType=INTEGER}</select>
	<select id="getByExpression" resultMap="queryResultMap" parameterType="org.durcframework.core.expression.ExpressionQuery">SELECT t.ID , t.ISSUE_ID , t.TASK_ID , t.ISSUE_NAME , t.TASK_NAME , t.CREATE_USER , t.CREATE_DATE , t.KEYWORDS , t.PROCESS_INSTANCE_ID FROM ISSUE_TASK t
		<include refid="expressionBlock.where"/> 
	</select>
	<delete id="del" parameterType="com.tianque.module.issue.domain.IssueTask">DELETE FROM ISSUE_TASK WHERE ID = #{id,jdbcType=INTEGER}</delete>
	<delete id="delByExpression" parameterType="org.durcframework.core.expression.ExpressionQuery">DELETE FROM ISSUE_TASK 
		<include refid="expressionBlock.where"/> 
	</delete>
</mapper>
